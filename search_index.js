var documenterSearchIndex = {"docs":
[{"location":"reference/#Index","page":"Alphabetical function list","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Alphabetical function list","title":"Alphabetical function list","text":"","category":"page"},{"location":"reference/api/","page":"Function reference","title":"Function reference","text":"Modules = [Minc2]\nPages = [\n    \"geo_transform.jl\",\n    \"minc2_io.jl\",\n    \"Minc2.jl\",\n    \"minc_hl.jl\",\n    \"minc_makie.jl\",\n    \"nifti_io.jl\",\n    \"xfm_io.jl\",\n]\nOrder   = [:macro, :function, :type, :constant, ]","category":"page"},{"location":"#Julia-MINC","page":"Introduction to JMinc.jl","title":"Julia MINC","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"(Image: CI)","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Read and write MINC files from Julia, reading and writing .xfm transformation files,  Manipulations with volumes","category":"page"},{"location":"#Examples","page":"Introduction to JMinc.jl","title":"Examples","text":"","category":"section"},{"location":"#Read-a-3D-minc-volume,-calculate-mean-value","page":"Introduction to JMinc.jl","title":"Read a 3D minc volume, calculate mean value","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Minc command:","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"> mincstats -mean mni_icbm152_t1_tal_nlin_sym_09c.mnc\nMean:              29.61005195","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Julia version:","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"using JMinc\nusing StatsBase\n\n# read volume from minc file, represent it as array of doubles (Float64 in julia world)\nicbm=JMinc.read_volume(\"mni_icbm152_t1_tal_nlin_sym_09c.mnc\", store=Float64)\n@show mean(JMinc.array(icbm))","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Output mean(JMinc.array(icbm)) = 29.61005194874031","category":"page"},{"location":"#Read-a-3D-volume-with-real-values,-and-another-one-with-mask-labels-and-show-statistics-per-label","page":"Introduction to JMinc.jl","title":"Read a 3D volume with real values, and another one with mask labels and show statistics per label","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"using JMinc\nusing StatsBase\n\n# read T1w scan\nicbm=JMinc.read_volume(\"mni_icbm152_t1_tal_nlin_sym_09c.mnc\", store=Float64)\n# read label mask, represent it as array of bytes \nlab=JMinc.read_volume(\"mni_icbm152_cls_tal_nlin_sym_09c.mnc\", store=UInt8)\n\n# calculate image statistics per label\nfor (i,l) in [1=>\"CSF\",2=>\"GM\",3=>\"WM\"]\n    println(\"$(l):$(mean(JMinc.array(icbm)[ JMinc.array(lab).==i ]))\")\nend","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Output:","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"CSF:31.263195070792978\nGM:64.88399427312729\nWM:84.74593912912998","category":"page"},{"location":"#Apply-transformation-stored-in-.xfm-file-to-a-minc-volume,-save-result","page":"Introduction to JMinc.jl","title":"Apply transformation stored in .xfm file to a minc volume, save result","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Create transformation:param2xfm -rotations 30 0 0 rotate.xfm","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"using JMinc\n\n# read T1w scan\nicbm=JMinc.read_volume(\"mni_icbm152_t1_tal_nlin_sym_09c.mnc\", store=Float64)\n\n# read transformation\ntfm=JMinc.load_transforms(\"rotate.xfm\")\n\n# apply transformation to the volume\ntransformed_icbm=JMinc.resample_volume(icbm; tfm, order=2, fill=0.0)\n\n# write the resulting volume into file, append history\n# the resulting volume will be stored with unsigned short minc data type\n# but will preserve floating point vales used fixe-point arithmetics\nJMinc.save_volume(\"transformed_icbm.mnc\",transformed_icbm, store=UInt16, history=\"Julia example\")","category":"page"},{"location":"#Integrate-jacobians-per-ROI,-based-on-a-transformation-in-.xfm-file","page":"Introduction to JMinc.jl","title":"Integrate jacobians per ROI, based on a transformation in .xfm file","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"using JMinc\n\n# read ROI labels\nrois = JMinc.read_volume(\"rois.mnc\", store=UInt8)\n\n# calculate voxel volume \nstart, step, dir_cos = JMinc.decompose(JMinc.voxel_to_world(rois))\nvoxel_volume = abs(reduce(*,step,init=1))\n\n# read transformation\ntfm = JMinc.load_transforms(\"nonlinear.xfm\")\n\n# define sampling parameters for jacobian field\njacobians = JMinc.empty_volume_like(lab, store=Float64)\n\n# calculate per-voxel jacobians\nJMinc.calculate_jacobian!(tfm, jacobians)\n\n# Integrate per ROI\nfor (i,l) in [1=>\"ROI-1\",2=>\"ROI-2\",3=>\"ROI-3\"]\n    println(\"$(l):$( sum((JMinc.array(rois) .== i) .* JMinc.array(jac) )*voxel_volume)\")\nend","category":"page"},{"location":"#Graphic-examples,-using-Makie","page":"Introduction to JMinc.jl","title":"Graphic examples, using Makie","text":"","category":"section"},{"location":"#Show-MNI-ICBM152-template-contours-with-tissue-masks-overlays","page":"Introduction to JMinc.jl","title":"Show MNI-ICBM152 template contours with tissue masks overlays","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"using CairoMakie\nusing JMinc\n\n# read T1w scan\nicbm=JMinc.read_volume(\"mni_icbm152_t1_tal_nlin_sym_09c.mnc\", store=Float64)\n# read label mask, represent it as array of bytes \nlab=JMinc.read_volume(\"mni_icbm152_cls_tal_nlin_sym_09c.mnc\", store=UInt8)\n\n\nfig = Figure()\ngc = fig[1, 1] = GridLayout()\n\nJMinc.draw_outline_with_labels(gc, icbm, lab, \n    labels=Dict([1=>\"CSF\",2=>\"GM\",3=>\"WM\"]),\n    nslices = 5)\n\nresize_to_layout!(fig)\n\nsave(\"mni_icbm152_segmentation.png\", fig, px_per_unit = 1)","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Will produce","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"(Image: MNI-ICBM152)","category":"page"},{"location":"#Show-MNI-ICBM152-template-contours-with-GM-proability-map","page":"Introduction to JMinc.jl","title":"Show MNI-ICBM152 template contours with GM proability map","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"using CairoMakie\nusing JMinc\n\n# read T1w scan\nanat=JMinc.read_volume(\"mni_icbm152_t1_tal_nlin_sym_09c.mnc\",store=Float64)\n# read field\ngm=JMinc.read_volume(\"mni_icbm152_gm_tal_nlin_sym_09c.mnc\",store=Float64)\n\nfig = Figure()\ngc = fig[1, 1] = GridLayout()\n\n# set background to transparent\nJMinc.array(gm)[JMinc.array(gm) .< 1e-6] .= NaN\n\nJMinc.draw_outline_with_heatmap(gc, anat, gm, \n    heat_limits=(0.0,1.0),cmap=:turbo,\n    nslices = 5)\n\nresize_to_layout!(fig)\n\nsave(\"mni_icbm152_gm.png\", fig, px_per_unit = 1) ","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Will produce (Image: MNI-ICBM152)","category":"page"},{"location":"#More-examples","page":"Introduction to JMinc.jl","title":"More examples","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"See examples directory for more examples","category":"page"},{"location":"#Documentation","page":"Introduction to JMinc.jl","title":"Documentation","text":"","category":"section"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Preliminary documentation is available at https://www.ilmarin.info/JMinc.jl/","category":"page"},{"location":"","page":"Introduction to JMinc.jl","title":"Introduction to JMinc.jl","text":"Documentations for underlying libminc and minc tools is available at ","category":"page"}]
}
